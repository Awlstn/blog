name: Vite Build  # 워크플로우 이름 (CI = Continuous Integration)

on:
  push:
    branches: [main]  # main 브랜치에 push 될 때 워크플로우 실행

jobs:
  build:  # 첫 번째 Job: build 작업
    runs-on: ubuntu-latest  # GitHub에서 제공하는 최신 Ubuntu 환경에서 실행
    steps:
      - uses: actions/checkout@v4  # 현재 리포지토리의 코드를 체크아웃 (clone)
      
      - run: npm ci  # 의존성 설치 (package-lock.json 기반, 빠르고 안정적)
      
      - run: npm run build  # 빌드 스크립트 실행 (보통 dist 폴더 생성됨)
      
      - uses: actions/configure-pages@v5  # GitHub Pages 배포를 위한 설정 수행
      
      - uses: actions/upload-pages-artifact@v3  # 빌드 결과물을 업로드
        with: 
          path: "./dist"  # 업로드할 디렉토리 경로 (위 빌드 결과물 위치)

  deploy:  # 두 번째 Job: 실제 GitHub Pages 배포
    needs: build  # build Job이 완료된 후 실행됨
    permissions:
      pages: write  # GitHub Pages에 쓸 권한 부여
      id-token: write  # OpenID Connect 토큰 발급 권한 부여 (보안 인증용)
    environment:
      name: github-pages  # 배포 환경 이름
      url: ${{ steps.deployment.outputs.page_url }}  # 배포 후 페이지 URL 출력
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout gh-pages branch
        run: |
          git fetch --all
          git checkout gh-pages || git checkout --orphan gh-pages  # 'gh-pages' 브랜치가 없다면 새로 만듦
          git reset --hard

      - name: Get latest run ID # Gradle Build 워크플로우의 ID를 가져옴
        id: get_run_id
        run: |
          run_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?status=success" \
            | jq '.workflow_runs | map(select(.name == "Vite Build")) | .[0].id')
            # 다른 워크플로우의 ID를 가져오기 위해 GitHub API를 사용
          echo "$run_id"
          echo "run_id=$run_id" >> $GITHUB_ENV # 환경 변수에 저장

      - name: Download artifact from previous workflow
        uses: actions/download-artifact@v4 # 이전 워크플로우에서 아티팩트를 다운로드하는 액션
        with:
          name: build-artifact
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ env.run_id }} # 이전 워크플로우의 ID

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3 # GitHub Pages에 배포하는 액션
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: . # 배포할 디렉토리
